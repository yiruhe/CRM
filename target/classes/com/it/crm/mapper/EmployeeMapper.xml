<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.crm.mapper.EmployeeMapper">


  <resultMap id="BaseResultMap" type="com.it.crm.domain.Employee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="real_name" jdbcType="CHAR" property="realName" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="tel" jdbcType="CHAR" property="tel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="input_time" jdbcType="TIMESTAMP" property="inputTime" />
    <result column="e_state" jdbcType="TINYINT" property="state" />
    <result column="admin" jdbcType="TINYINT" property="admin" />
    <association property="dept" javaType="Department" >
        <id column="d_id" property="id" />
        <result column="d_name" property="name" />
    </association>
    <collection property="roles" ofType="Role" select="com.it.crm.mapper.RoleMapper.queryRolesByUserId" column="id"   />
  </resultMap>

  <delete id="deleteByPrimaryKey">
    UPDATE employee SET  state = 0 WHERE  id =#{id}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id"  useGeneratedKeys="true" >
    insert into
        employee (
            username,
            real_name,
            password,
            tel,
            email,
            input_time,
            state,
            admin,
            dept_id)
    values
          (#{username,jdbcType=CHAR},
          #{realName,jdbcType=CHAR},
          #{password,jdbcType=CHAR},
          #{tel,jdbcType=CHAR},
          #{email,jdbcType=VARCHAR},
          #{inputTime,jdbcType=TIMESTAMP},
          #{state,jdbcType=TINYINT},
          #{admin,jdbcType=TINYINT},
          #{dept.id,jdbcType=BIGINT})
  </insert>

  <update id="updateByPrimaryKey">
    update employee
      <set>
        <if test="username != null">
          username = #{username,jdbcType=CHAR},
        </if>
        <if test="realName != null">
          real_name = #{realName,jdbcType=CHAR},
        </if>
        <if test="password != null">
          password = #{password,jdbcType=CHAR},
        </if>
        <if test="tel != null">
          tel = #{tel,jdbcType=CHAR},
        </if>
        <if test="email != null">
          email = #{email,jdbcType=VARCHAR},
        </if>
        <if test="inputTime != null">
          input_time = #{inputTime,jdbcType=TIMESTAMP},
        </if>
        <if test="state!= null">
          state = #{state,jdbcType=TINYINT},
        </if>
        <if test="admin != null">
          admin = #{admin,jdbcType=TINYINT},
        </if>
        <if test="dept.id != null">
          dept_id = #{dept.id}
        </if>
      </set>
    WHERE id = #{id}
  </update>

  <sql id="field">
      e.id,
      e.username,
      e.real_name,
      e.tel,
      e.email,
      e.input_time,
      e.state e_state,
      e.admin,
      d.id d_id,
      d.name d_name,
      d.dept_no d_dept_no,
      d.state d_state
  </sql>

  <select id="selectByPrimaryKey"  resultMap="BaseResultMap">
    select
     <include refid="field" />
    from employee e LEFT JOIN department d
    on e.dept_id = d.id
    where e.id = #{id}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select
          <include refid="field" />
    from employee e LEFT JOIN department d

    on e.dept_id = d.id
    <where>
      <if test="name != null">
        username like CONCAT("%",#{name},"%")
      </if>
      <if test="startTime != null">
        <![CDATA[
            and input_time > #{startTime}
         ]]>
      </if>
      <if test="endTime != null">
        <![CDATA[
            AND input_time < #{endTime}
        ]]>
      </if>
    </where>
  </select>

  <select id="login" resultMap="BaseResultMap" >
    select
    <include refid="field" />
    from employee e LEFT JOIN department d
    on e.dept_id = d.id
    JOIN employee_role er ON e.id=er.employee_id
    WHERE e.username= #{username} AND e.password = #{password}
  </select>
</mapper>